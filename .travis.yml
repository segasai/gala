language: c

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

os:
    - linux

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng
            - gsl-bin
            - libgsl0-dev


stage: Comprehensive tests

stages:
   # Do the style check and a single test job, don't proceed if it fails
   - name: Initial tests
   # Test docs, astropy dev, and without optional dependencies
   - name: Comprehensive tests
   # These will only run when cron is opted in
   - name: Cron tests
     if: type = cron


env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - PYTHON_VERSION=3.7
        - MAIN_CMD='python setup.py'
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable
        - SETUP_CMD='test'
        - CONDA_DEPENDENCIES='cython scipy matplotlib pyyaml h5py sympy numexpr'
        - CONDA_DEPENDENCIES_DOC="${CONDA_DEPENDENCIES} jinja2 ipython jupyter notebook ipykernel"
        - PIP_DEPENDENCIES=''
        - PIP_DEPENDENCIES_DOC="${PIP_DEPENDENCIES} nbsphinx tqdm sphinx-astropy"
        - CONDA_CHANNELS='astropy-ci-extras astropy'

        # If there are matplotlib or other GUI tests, uncomment the following
        # line to use the X virtual framebuffer.
        - SETUP_XVFB=True

        # If you want to ignore certain flake8 errors, you can list them
        # in FLAKE8_OPT, for example:
        # - FLAKE8_OPT='--ignore=E501'
        - FLAKE8_OPT=''

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:
        # Make sure that egg_info works without dependencies
        - stage: Initial tests
          env: PYTHON_VERSION=3.7 SETUP_CMD='egg_info'

        # Try MacOS X, usually enough only to run from cron as hardly there are
        # issues that are not picked up by a linux worker
        - os: osx
          stage: Cron tests
          env: SETUP_CMD='test' EVENT_TYPE='cron'

        # Do a coverage test.
        - os: linux
          stage: Initial tests
          env: SETUP_CMD='test --coverage'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - os: linux
          env: SETUP_CMD='install build_docs -w'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_DOC
               PIP_DEPENDENCIES=$PIP_DEPENDENCIES_DOC

        # Now try Astropy dev with the latest Python and LTS with and 3.x.
        - os: linux
          env: ASTROPY_VERSION=development
               EVENT_TYPE='pull_request push cron'

        # Add a job that runs from cron only and tests against astropy dev and
        # numpy dev to give a change for early discovery of issues and feedback
        # for both developer teams.
        - os: linux
          stage: Cron tests
          env: ASTROPY_VERSION=development NUMPY_VERSION=development
               EVENT_TYPE='cron'

        - os: linux
          env: PYTHON_VERSION=3.6

        - os: linux
          env: SETUP_CMD='build --nogsl test'

        - os: linux
          env: CONDA_DEPENDENCIES+=" galpy"

        # Do a PEP8 test with flake8
        # - os: linux
        #   stage: Initial tests
        #   env: MAIN_CMD='flake8 gala --count --show-source --statistics $FLAKE8_OPT' SETUP_CMD=''

    allow_failures:
        # Do a PEP8 test with flake8
        # (do allow to fail unless your code completely compliant)
        - os: linux
          stage: Initial tests
          env: MAIN_CMD='flake8 gala --count --show-source --statistics $FLAKE8_OPT' SETUP_CMD=''

install:
    - git clone --depth 1 git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh

script:
   - $MAIN_CMD $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then
        coveralls --rcfile='gala/tests/coveragerc';
      fi